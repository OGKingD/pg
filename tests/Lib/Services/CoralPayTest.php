<?php

namespace Tests\Lib\Services;

use App\Lib\Services\CoralPay;
use Tests\TestCase;
use function PHPUnit\Framework\assertArrayHasKey;

class CoralPayTest extends TestCase
{
    private CoralPay $cpay;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->cpay = new CoralPay;
    }


    public function testGenerateKeys()
    {
        $key = $this->cpay->generateKeys();
        echo $key[0];

        self::assertStringContainsString('-----BEGIN PUBLIC KEY-----',$key[0]);

    }

    public function testNqrAuth(): void
    {
        $result = $this->cpay->nqrAuthenticate();
        dump($result);

        self::assertArrayHasKey('token',$result);
    }

    public function testCreateMerchant()
    {
        $result = $this->cpay->createMerchant();
        dump($result);

        assertArrayHasKey('merchant_id',$result);

    }
    public function testCreateTerminal()
    {
        $result = $this->cpay->createTerminal();
        dump($result);

        assertArrayHasKey('terminal_id',$result);

    }
    public function testCreateQrCode()
    {
        $result = $this->cpay->createQrCode(100,'SPAYINV1234');
        dump($result, base64_encode($result['qr_code']));

        assertArrayHasKey('qr_code',$result);

    }
    public function testQueryMerchant()
    {
        $result = $this->cpay->queryMerchants();
        dump($result);

        assertArrayHasKey('data',$result);

    }

}
